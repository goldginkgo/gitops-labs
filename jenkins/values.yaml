# https://github.com/jenkinsci/helm-charts/tree/main/charts/jenkins
# https://github.com/jenkinsci/helm-charts/blob/main/charts/jenkins/VALUES_SUMMARY.md
# https://github.com/jenkinsci/helm-charts/blob/main/charts/jenkins/values.yaml
jenkins:
  persistence:
    size: "20Gi"
    storageClass: "managed-premium"
  controller:
    image: "acepi001cr01.azurecr.cn/library/aldi-jenkins"
    tag: "0.12.0"
    imagePullSecretName: regcred-acepi001cr01
    installPlugins: false
    jenkinsAdminEmail: azurechina.admin@aldi.cn
    ingress:
      enabled: true
      apiVersion: networking.k8s.io/v1
      hostName: jenkins2.infra.aldicn.local
      tls:
        - secretName: jenkins-ingress-tls
          hosts:
            - jenkins2.infra.aldicn.local
    additionalExistingSecrets:
      - name: nexus-credentials
        keyName: nexus-user
      - name: nexus-credentials
        keyName: nexus-password
      - name: sonarqube-credentials
        keyName: sonarqube-token
      - name: jenkins-admin-credentials
        keyName: jenkins-pass
      - name: gitlab-user-credentials
        keyName: gitlab-user
      - name: gitlab-user-credentials
        keyName: gitlab-password
      - name: gitlab-credentials
        keyName: gitlab-token
      - name: ldap-bind-credentials
        keyName: password
      - name: aceda022cr01-credentials
        keyName: username
      - name: aceda022cr01-credentials
        keyName: password
      - name: acepi001cr01-credentials
        keyName: username
      - name: acepi001cr01-credentials
        keyName: password
    # https://github.com/jenkinsci/configuration-as-code-plugin/tree/master/demos
    # https://jenkins2.infra.aldicn.local/configuration-as-code/reference
    JCasC:
      securityRealm: |-
        # local:
        #   allowsSignup: false
        #   enableCaptcha: false
        #   users:
        #   - id: "admin"
        #     name: "Jenkins Admin"
        #     password: "${jenkins-admin-credentials-jenkins-pass}"
        ldap:
          configurations:
            - groupSearchFilter:
                "(&(cn={0})(objectclass=group))"
              inhibitInferRootDN: false
              mailAddressAttributeName: "userPrincipalName"
              managerDN: "CN=svc_Azure_Jenkins,OU=Service Accounts,OU=ACE,OU=AzureChina,DC=ALDICN,DC=LOCAL"
              managerPasswordSecret: "${ldap-bind-credentials-password}"
              rootDN: "DC=ALDICN,DC=LOCAL"
              server: "ldap://10.224.14.4"
              userSearch: "sAMAccountName={0}"
          disableMailAddressResolver: false
          disableRolePrefixing: true
          groupIdStrategy: "caseInsensitive"
          userIdStrategy: "caseInsensitive"
      configScripts:
        welcome-message: |
          jenkins:
            systemMessage: Welcome to ALDI CI/CD server.
        jenkins-credentials: |
          credentials:
            system:
              domainCredentials:
              - credentials:
                - usernamePassword:
                    description: "Nexus access username password"
                    id: "nexus_username_pass"
                    password: ${nexus-credentials-nexus-password}
                    scope: GLOBAL
                    username: ${nexus-credentials-nexus-user}
                - usernamePassword:
                    description: "GitLab access username password"
                    id: "gitlab_username_pass"
                    password: ${gitlab-user-credentials-gitlab-password}
                    scope: GLOBAL
                    username: ${gitlab-user-credentials-gitlab-user}
                - string:
                    scope: GLOBAL
                    id: "sonarqube-token"
                    secret: "${sonarqube-credentials-sonarqube-token}"
                    description: "SonarQube token"
                - gitLabApiTokenImpl:
                    scope: GLOBAL
                    id: gitlab_token
                    apiToken: "${gitlab-credentials-gitlab-token}"
                    description: "Gitlab Token"
                - usernamePassword:
                    description: "aceda022cr01 registry username password"
                    id: "aceda022cr01_username_pass"
                    password: ${aceda022cr01-credentials-password}
                    scope: GLOBAL
                    username: ${aceda022cr01-credentials-username}
                - usernamePassword:
                    description: "acepi001cr01 registry username password"
                    id: "acepi001cr01_username_pass"
                    password: ${acepi001cr01-credentials-password}
                    scope: GLOBAL
                    username: ${acepi001cr01-credentials-username}
        sonarqube: |
          unclassified:
            sonarglobalconfiguration:
              buildWrapperEnabled: true
              installations:
                - name: "SonarQube"
                  serverUrl: "http://sonarqube-sonarqube.sonarqube.svc.cluster.local:9000"
                  credentialsId: sonarqube-token
        nexus-repository-manager: |
          unclassified:
            globalNexusConfiguration:
              nxrmConfigs:
                - nxrm3Configuration:
                    credentialsId: nexus_username_pass
                    displayName: ALDI Nexus
                    id: aldi-nexus
                    serverUrl: http://nexus-nexus-repository-manager.nexus.svc.cluster.local:8081
        gitlab: |
          unclassified:
            gitlabconnectionconfig:
              useAuthenticatedEndpoint: false    # Disabling authentication for now
              connections:
                - apiTokenId: gitlab_token
                  clientBuilderId: "autodetect"
                  connectionTimeout: 20
                  ignoreCertificateErrors: true
                  name: "aldi_gitlab_server"
                  readTimeout: 10
                  url: "http://560GHD11/"
        maven: |
          tool:
            maven:
              installations:
                - name: "maven"
                  properties:
                    - installSource:
                        installers:
                          - maven:
                              id: "3.6.3"
        mailer: |
          unclassified:
            mailer:
              charset: "UTF-8"
              defaultSuffix: "@aldi.cn"
              smtpHost: "smtp.aldicn.local"
              useSsl: false
              useTls: false
        global-library: |
          unclassified:
            globalLibraries:
              libraries:
                - defaultVersion: "master"
                  name: "jenkins-library"
                  retriever:
                    modernSCM:
                      scm:
                        git:
                          credentialsId: "gitlab_username_pass"
                          id: "jenkins-gitlab"
                          remote: "http://560GHD11/aldi-gitops/jenkins-library.git"
                          traits:
                            - "gitBranchDiscovery"
        email-ext: |
          unclassified:
            email-ext:
              defaultContentType: "text/html"
              defaultSuffix: "@aldi.cn"
              mailAccount:
                smtpHost: "smtp.aldicn.local"
        allure: |
          tool:
            allure:
              installations:
              - name: "Allure"
                properties:
                - installSource:
                    installers:
                    - allureCommandlineInstaller:
                        id: "2.13.9"
        script-security: |
          security:
            globalJobDslSecurityConfiguration:
              useScriptSecurity: false  # Disalbe script security as authorize-project-plugin doesn't support JCasC https://github.com/jenkinsci/authorize-project-plugin/pull/44
        role-strategy: |
          jenkins:
            authorizationStrategy:
              roleBased:
                roles:
                  global:
                  - assignments:
                    - "g_Jenkins_Admin"
                    name: "admin"
                    pattern: ".*"
                    permissions:
                    - "Job/Move"
                    - "Job/Build"
                    - "Lockable Resources/View"
                    - "Credentials/Delete"
                    - "Credentials/ManageDomains"
                    - "Lockable Resources/Unlock"
                    - "View/Create"
                    - "Agent/Configure"
                    - "Job/Read"
                    - "Credentials/Update"
                    - "Agent/Create"
                    - "Job/Delete"
                    - "Agent/Build"
                    - "View/Configure"
                    - "Lockable Resources/Reserve"
                    - "Agent/Provision"
                    - "SCM/Tag"
                    - "Job/Create"
                    - "Job/Discover"
                    - "Credentials/View"
                    - "Agent/Connect"
                    - "Agent/Delete"
                    - "Run/Replay"
                    - "Agent/Disconnect"
                    - "Run/Delete"
                    - "Job/Cancel"
                    - "Overall/Read"
                    - "Run/Update"
                    - "Credentials/Create"
                    - "Overall/Administer"
                    - "View/Delete"
                    - "Job/Configure"
                    - "Metrics/View"
                    - "Job/Workspace"
                    - "View/Read"
                  - assignments:
                    - "g_Jenkins_Operator"
                    name: "operator"
                    pattern: ".*"
                    permissions:
                    - "Lockable Resources/View"
                    - "Job/Build"
                    - "SCM/Tag"
                    - "Job/Discover"
                    - "Job/Read"
                    - "Credentials/View"
                    - "Run/Replay"
                    - "Job/Cancel"
                    - "Overall/Read"
                    - "Run/Update"
                    - "Job/Configure"
                    - "Job/Workspace"
                    - "Metrics/View"
                    - "View/Read"
                  - assignments:
                    - "g_Jenkins_User"
                    name: "user"
                    pattern: ".*"
                    permissions:
                    - "Overall/Read"
                    - "Lockable Resources/View"
                    - "SCM/Tag"
                    - "Job/Read"
                    - "Metrics/View"
                    - "View/Read"
                    - "Credentials/View"
        jobs: |
          jobs:
            - script: >
                job('load_gitops_jobs') {
                  concurrentBuild(false)
                  logRotator {
                    numToKeep(10)
                  }
                  scm {
                    git {
                      remote {
                        url('http://560GHD11/aldi-gitops/jenkins-jobs.git')
                        credentials('gitlab_username_pass')
                      }
                      branch('*/master')
                    }
                  }
                  steps {
                    jobDsl{
                      targets("folders.groovy\ngitops/*.groovy")
                    }
                  }
                }

  agent:
    namespace: jenkins
    image: "dockerhub.azk8s.cn/jenkins/inbound-agent"
    tag: "4.6-1"
    podName: default-agent
    command: "/usr/local/bin/jenkins-agent"
    podTemplates:
      jnlp-old: |
        - name: jnlp-old
          label: jnlp-old
          serviceAccount: jenkins
          imagePullSecrets:
            - name: "regsecret"
          volumes:
            - hostPathVolume:
                hostPath: "/var/run/docker.sock"
                mountPath: "/var/run/docker.sock"
          containers:
            - name: jnlp
              image: aceda022cr01.azurecr.cn/library/jenkins-alpine:4.2.0
              ttyEnabled: true
              privileged: true
              resourceRequestCpu: "400m"
              resourceRequestMemory: "512Mi"
              resourceLimitCpu: "1"
              resourceLimitMemory: "2048Mi"

      maven38: |
        - name: maven38
          label: maven38
          serviceAccount: jenkins
          envVars:
            - envVar:
                key: "DOCKER_CONFIG"
                value: "/kaniko/.docker"
          volumes:
            # - configMapVolume:
            #     configMapName: "trivy-html-template"
            #     mountPath: "/trivy"
            #     optional: false
            - secretVolume:
                mountPath: "/kaniko/.docker"
                optional: false
                secretName: "kaniko-acepi001cr01"
            - persistentVolumeClaim:
                mountPath: "/root/.m2/repository"
                readOnly: false
                claimName: "maven-cache-pvc"
            - persistentVolumeClaim:
                mountPath: "/kanikocache"
                readOnly: false
                claimName: "kaniko-cache-pvc"
          containers:
            - name: kaniko
              image: gcr.azk8s.cn/kaniko-project/executor:v1.6.0-debug
              command: "sleep"
              args: "3600"
              ttyEnabled: true
              privileged: true
              resourceRequestCpu: "400m"
              resourceRequestMemory: "512Mi"
              resourceLimitCpu: "1"
              resourceLimitMemory: "2048Mi"
            - name: maven
              image: dockerhub.azk8s.cn/library/maven:3.8.1-openjdk-8-slim
              command: "/bin/sh -c"
              args: "cat"
              ttyEnabled: true
              privileged: true
              resourceRequestCpu: "400m"
              resourceRequestMemory: "512Mi"
              resourceLimitCpu: "1"
              resourceLimitMemory: "2048Mi"
            - name: trivy
              image: aquasec/trivy:0.18.3
              command: "/bin/sh -c"
              args: "cat"
              ttyEnabled: true
              privileged: true
              resourceRequestCpu: "400m"
              resourceRequestMemory: "512Mi"
              resourceLimitCpu: "1"
              resourceLimitMemory: "2048Mi"
